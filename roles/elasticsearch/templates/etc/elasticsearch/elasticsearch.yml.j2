# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please consult the documentation for further information on configuration options:
# https://www.elastic.co/guide/en/elasticsearch/reference/index.html
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
#cluster.name: my-application
cluster.name: {{ elasticsearch_cluster_name }}
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
#node.name: node-1
node.name: {% if elasticsearch_node_name is defined %}{{ elasticsearch_node_name }}{% else %}{{ ansible_hostname }}{% endif %}

#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
path.data: /var/lib/elasticsearch
#
# Path to log files:
#
path.logs: /var/log/elasticsearch
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
{% if elasticsearch_bind_all %}
network.host: 0.0.0.0
{% if elasticsearch_tp_iface %}
transport.host: {{ ansible_facts[elasticsearch_tp_iface].ipv4.address}}
{% endif %}
{% else %}
network.host: {{ ansible_facts[elasticsearch_iface].ipv4.address}}
{% endif %}

#
# Set a custom port for HTTP:
#
#http.port: 9200
http.port: 9200
#
# For more information, consult the network module documentation.
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when this node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
#discovery.seed_hosts: ["host1", "host2"]
{% if es_nodes|length > 1 %}
discovery.seed_hosts:
{% for host in es_nodes %}
{% if hostvars[host].elasticsearch_node_name is defined %}
  - "{{ hostvars[host].elasticsearch_node_name }}"
{% else %}
  - "{{ hostvars[host].ansible_hostname }}"
{% endif %}
{% endfor %}
{% else %}
discovery.seed_hosts: []
discovery.type: single-node
{% endif %}

#
# Bootstrap the cluster using an initial set of master-eligible nodes:
#
#cluster.initial_master_nodes: ["node-1", "node-2"]
{% if es_nodes|length > 1 %}
cluster.initial_master_nodes:
{% for host in es_nodes %}
{% if hostvars[host].elasticsearch_node_name is defined %}
  - "{{ hostvars[host].elasticsearch_node_name }}"
{% else %}
  - "{{ hostvars[host].ansible_hostname }}"
{% endif %}
{% endfor %}
{% endif %}

# see trac #8651
cluster.routing.allocation.disk.watermark.low:  0.90
cluster.routing.allocation.disk.watermark.high: 0.95
cluster.routing.allocation.disk.watermark.flood_stage: 0.96
cluster.routing.allocation.disk.watermark.flood_stage.frozen: 0.96
#
# For more information, consult the discovery and cluster formation module documentation.
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, consult the gateway module documentation.
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true

{% if not elasticsearch_oss and elasticsearch_auth %}
# ----------------------------------- Auth -------------------------------------
xpack:
  security:
    enabled: true
    transport.ssl.enabled: true
    transport.ssl.verification_mode: certificate
    transport.ssl.key: certs/{{ ansible_hostname }}/{{ ansible_hostname }}.key
    transport.ssl.certificate: certs/{{ ansible_hostname }}/{{ ansible_hostname }}.crt
{% if elasticsearch_major_version | int < 8 %}
    transport.ssl.certificate_authorities: certs/ca/ca.crt
{% endif %}
{% if elasticsearch_major_version | int >= 8 %}
    http.ssl.enabled: false
{% endif %}
    authc:
      realms:
{% if elasticsearch_major_version | int > 6 %}
        native:
          native1:
            order: 0
{% else %}
        native1:
          type: native
          order: 0
{% endif %}
{% endif %}
