---

#
# This file included from the main tasks file, with variables :
#  - name
#  - password
#  - email
#  - roles
#

- name: all users
  uri:
    url: http://{{ ansible_facts[elasticsearch_iface].ipv4.address }}:9200/_security/user/
    user: elastic
    force_basic_auth: yes
    password: "{{ lookup('file', 'credentials/' + elasticsearch_cluster_name + '/elastic.passwd') }}"
  register: all_users

- name: show me all sorted users
  debug:
    msg: "{{ all_users.json.keys()|list|sort }}"
  when: not ansible_check_mode

- name: Get user {{ item.name }}
  uri:
    url: http://{{ ansible_facts[kibana_iface].ipv4.address }}:5601/api/security/v1/me
    user: "{{ item.name }}"
    password: "{{ item.password }}"
    force_basic_auth: yes
    status_code:
      - 200
      - 404
      - 401
  register: me_user

- name: create user
  uri:
    url: http://{{ ansible_facts[elasticsearch_iface].ipv4.address }}:9200/_security/user/{{ item.name }}
    method: "{{ (item.name in all_users.json) | ternary('PUT', 'POST') }}"
    user: elastic
    password: "{{ lookup('file', 'credentials/' + elasticsearch_cluster_name + '/elastic.passwd') }}"
    force_basic_auth: yes
    body_format: json
    body:
      password: "{{ item.password }}"
      roles: "{{ item.roles|default([]) }}"
      email: "{{ item.email }}"
  when: >
    not ansible_check_mode
    and (
    me_user.status == 401
    or (
      me_user.json.email != item.email
      or
      me_user.json.roles != item.roles
      )
    )


#    me_user.status != 200
#    or
